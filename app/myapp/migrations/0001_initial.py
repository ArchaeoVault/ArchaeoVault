# Generated by Django 5.1.6 on 2025-04-07 18:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="address",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("streetnumber", models.CharField(max_length=900)),
                ("streetname", models.CharField(max_length=900)),
                ("state", models.CharField(max_length=900)),
                ("countyorcity", models.CharField(max_length=900)),
                ("site", models.CharField(max_length=900)),
            ],
        ),
        migrations.CreateModel(
            name="conservationtype",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("typename", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="formtype",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("typename", models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="gridnames",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("typename", models.CharField(max_length=900)),
            ],
        ),
        migrations.CreateModel(
            name="materialtype",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("typename", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="organicinorganic",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="permissions",
            fields=[
                ("numVal", models.IntegerField(primary_key=True, serialize=False)),
                ("givenrole", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="speciestype",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("typename", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="threedprintedtable",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="threedscannedtable",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="users",
            fields=[
                (
                    "email",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("upassword", models.CharField(max_length=500)),
                ("activated", models.BooleanField()),
                (
                    "upermission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.permissions",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="your_table",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("owner", models.CharField(max_length=255)),
                ("date_collected", models.DateTimeField()),
                ("catalog_number", models.CharField(max_length=25)),
                ("object_name", models.CharField(max_length=255)),
                ("scanned_by", models.CharField(max_length=100)),
                ("date_excavated", models.DateTimeField()),
                ("object_dated_to", models.CharField(max_length=100)),
                ("object_description", models.CharField(max_length=1000)),
                ("quantity", models.CharField(max_length=100)),
                ("measurement_diameter", models.FloatField()),
                ("length", models.FloatField()),
                ("width", models.FloatField()),
                ("height", models.CharField(max_length=50)),
                ("measurement_notes", models.CharField(max_length=750)),
                ("weight", models.FloatField()),
                ("weight_notes", models.CharField(max_length=50)),
                ("sivilich_diameter", models.FloatField()),
                ("deformation_index", models.FloatField()),
                ("date_catalogued", models.DateTimeField()),
                ("location_in_repository", models.CharField(max_length=50)),
                ("platlot", models.CharField(max_length=50)),
                ("found_at_depth", models.CharField(max_length=50)),
                ("longitude", models.CharField(max_length=20)),
                ("latitude", models.CharField(max_length=20)),
                ("distance_from_datum", models.CharField(max_length=25)),
                ("excavator", models.CharField(max_length=50)),
                ("notes", models.CharField(max_length=500)),
                ("images", models.CharField(max_length=500)),
                ("data_double_checked_by", models.CharField(max_length=50)),
                ("qsconcerns", models.CharField(max_length=100)),
                ("druhlcheck", models.CharField(max_length=50)),
                ("sources_for_id", models.CharField(max_length=1000)),
                ("location", models.CharField(max_length=100)),
                ("storage_location", models.CharField(max_length=50)),
                ("uhlflages", models.CharField(max_length=250)),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.address"
                    ),
                ),
                (
                    "cataloguer_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.users"
                    ),
                ),
                (
                    "conservation_condition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.conservationtype",
                    ),
                ),
                (
                    "form_object_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.formtype"
                    ),
                ),
                (
                    "found_in_grid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.gridnames",
                    ),
                ),
                (
                    "material_of_manufacture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.materialtype",
                    ),
                ),
                (
                    "organic_inorganic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.organicinorganic",
                    ),
                ),
                (
                    "printed_3d",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.threedprintedtable",
                    ),
                ),
                (
                    "scanned_3d",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.threedscannedtable",
                    ),
                ),
                (
                    "species",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.speciestype",
                    ),
                ),
            ],
        ),
    ]
